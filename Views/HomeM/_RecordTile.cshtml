@using Infor.Model.Enums
@model inReachWebRebuild.ViewModels.RecordTileViewModel
@{
    var css = "mif-folder-open mif-2x";
    var bgstyle = "color: #F9BC2B; padding-right: 5px; padding-left: 5px; padding-top:5px";
    var res = Model.Record;
    if (res.IsElectronic) {
        css = "mif-file-empty mif-2x";
        if (res.DocumentType.ToUpper() == "DOCX") {
            css = "mif-file-word mif-2x";
            bgstyle = "color: #3A72FF; padding-right: 5px; padding-left: 5px; padding-top:5px";
        }
        if (res.DocumentType.ToUpper() == "XLSX") {
            css = "mif-file-excel mif-2x";
            bgstyle = "color: #007F0E; padding-right: 5px; padding-left: 5px; padding-top:5px";
        }
        if (res.DocumentType.ToUpper() == "PDF") {
            css = "mif-file-pdf mif-2x";
            bgstyle = "color: #7F0000; padding-right: 5px; padding-left: 5px; padding-top:5px";
        }
        if (res.DocumentType.ToUpper() == "PPTX") {
            css = "mif-file-powerpoint mif-2x";
            bgstyle = "color: #FF3030; padding-right: 5px; padding-left: 5px; padding-top:5px";
        }
        if (res.DocumentType.ToUpper() == "TXT") {
            css = "mif-file-text mif-2x fg-gray";
            bgstyle = "color: #A0EDFF; padding-right: 5px; padding-left: 5px; padding-top:5px";
        }
    } else {
        if (!res.HasChildren) {
            css = "mif-folder mif-2x";
            bgstyle = "color: #F9BC2B; padding-right: 5px; padding-left: 5px; padding-top:5px";
        }
    }
    <div id="@($"swipearea{res.Uri}")" class="tileswipe">
        <div class="tile-wide" style="background: #EDFFFF; z-index: 10;" id="@Html.Raw($"{res.Uri}")">
            <div class="tile-content">
                <div data-role="preloader" data-type="cycle" data-style="color" id="@Html.Raw($"PL{res.Uri}")" style="display: none; height: 100%; width: 100%;"></div>
                @if (res.IsElectronic) {
                    if (res.CheckedOutStatus == InforCheckedOutStatus.CheckedOutSelf && res.CanEdit) {
                        <span class="@css" style="@bgstyle" OnClick="EditClick(event, @res.Uri, false)"></span>
                        <span OnClick="EditClick(event, @res.Uri, false)" id="@res.Uri">
                            <b>@res.DisplayTitle</b>
                        </span>
                    } else {
                        if (res.CanView && res.CheckedOutStatus != InforCheckedOutStatus.BeingProcessed) {
                            <span class="@css" style="@bgstyle" OnClick="ViewClick(event, @res.Uri, '@res.CanEdit.ToString()')"></span>
                            <span OnClick="ViewClick(event, @res.Uri, '@res.CanEdit.ToString()')" id="@res.Uri">
                                <b>@res.DisplayTitle</b>
                            </span>
                        } else {
                        
                                <span class="@css" style="@bgstyle"></span>
                                <span id="@res.Uri">
                                    <b>@res.DisplayTitle</b>
                                </span>
                           
                        }
                    }
                } else {
                    if (res.HasChildren) {
                        <span class="@css" style="@bgstyle" onclick="RecordClicked(@res.Uri)"></span>
                        <span onclick="RecordClicked(@res.Uri)" id="@res.Uri">
                            <b>@res.DisplayTitle</b>
                        </span>
                    } else {
                        <span class="@css" style="@bgstyle"></span>
                        <span id="@res.Uri">
                            <b>@res.DisplayTitle</b>
                        </span>
                    }
                }
                <div class="carousel" data-role="carousel" data-auto="false" style="height: 80%" data-controls="false" id="@($"caro{res.Uri}")">
                    <div class="slide" onclick="PropertiesClick(event, @res.Uri)" style="overflow: auto; padding-left: 5px;">
                        @Html.Raw(res.DisplayPropertiesShort)
                        @if (res.CheckedOutStatus == InforCheckedOutStatus.CheckedOutSelf) {
                            <div style="padding-top: 5px;">
                                <span class="fg-darkGreen" style="font-weight: bold;">@res.CheckedOutTo</span>
                                <br/>
                            </div>
                        }
                        @if (res.CheckedOutStatus == InforCheckedOutStatus.CheckedOutOther) {
                            <div style="padding-top: 5px;">
                                <span class="fg-cobalt" style="font-weight: bold;">@res.CheckedOutTo</span>
                                <br/>
                            </div>
                        }
                        @if (res.CheckedOutStatus == InforCheckedOutStatus.BeingProcessed) {
                            <div style="padding-top: 5px;">
                                <span class="fg-cobalt" style="font-weight: bold;">Being Processed</span>
                                <br/>
                            </div>
                        }
                    </div>
                    @if (!string.IsNullOrEmpty(res.DisplayNotesShort)) {
                    <div class="slide"  id="@($"{res.Uri}Notes")" style="padding-left: 5px;">
                        @Html.Raw($"{(res.DisplayNotesShort.Length > 35 ? res.DisplayNotesShort.Substring(0, 35) + $"..." : res.DisplayNotesShort)}")
                            
                        <div style="border-style: none; margin-top: 10px; text-align: center; width: 100%">
                            <button class="cycle-button bg-cyan bg-active-darkBlue fg-white" style="height: 48px; width: 48px;" onclick="NotesClick(event, @res.Uri)" data-role="hint"   data-hint="Notes">
                                <span class="mif-file-text"></span>
                                </button>
                        </div>
                    </div>
                    } else {
                        <div class="slide"   id="@($"{res.Uri}Notes")" style="padding-left: 5px;">
                            No Notes
                            <div style="border-style: none; margin-top: 10px; text-align: center; width: 100%">
                                <button class="cycle-button bg-cyan bg-active-darkBlue fg-white" style="height: 48px; width: 48px;" onclick="NotesClick(event, @res.Uri)" data-role="hint"   data-hint="Notes">
                                    <span class="mif-file-text"></span>
                                  </button>
                            </div>
                        </div>
                    }



                    @if (string.IsNullOrEmpty(res.DisplayActions)) {
                        <div class="slide" id="@($"{res.Uri}Actions")" style="padding-left: 5px;">
                            No Actions
                            <div style="border-style: none; margin-top: 10px; text-align: center; width: 100%">
                                @{
                                    if (res.CanAddActions) {
                                        <button class="cycle-button bg-cyan bg-active-darkBlue fg-white" style="height: 48px; width: 48px;" onclick="AddActionClick(@res.Uri)" data-role="hint" data-hint="Add Action">
                                            <span class="mif-plus"></span>
                                        </button>
                                    }
                                }
                               

                            </div>
                        </div>
                    } else {
                        <div class="slide"  id="@($"{res.Uri}Actions")" style="padding-left: 5px;">
                            @Html.Raw(res.DisplayActions)
                            <div style="border-style: none; margin-top: 10px; text-align: center; width: 100%">
                                <button class="cycle-button bg-cyan bg-active-darkBlue fg-white" style="height: 48px; width: 48px;" onclick="ActionsClick(event, @res.Uri)" data-role="hint"   data-hint="View Actions">
                                    <span class="mif-flow-cascade"></span>
                                </button>
                                 
                            </div>
                        </div>
                    }


                    @*<div class="slide" onclick="ActionsClick(event, @res.Uri) " id="@($"{res.Uri}Actions")" style="padding-left: 5px;">
                          
                            <button class="cycle-button bg-cyan bg-active-darkBlue fg-white" style="height: 48px; width: 48px;" onclick="ProcessClick(event, @res.Uri) " id=@($"btnShowProcess{res.Uri}")>
                                <span class="mif-tree"></span>
                                    
                            </button>
                        </div>*@
                    @*}*@
                    @*@if (res.IsElectronic) {
                        <div class="slide" id="@($"{res.Uri}DocFunctions")" style="padding-left: 5px;">
                            @if (res.CheckedOutStatus == InforCheckedOutStatus.CheckedOutOther || res.CheckedOutStatus == InforCheckedOutStatus.CheckedOutSelf) {
                                <span>@res.CheckedOutTo</span>
                                <br/>
                            } else {
                                <br/>
                            }
                            <div style="margin-left: 25%;">
                                @if (res.CanView && res.CheckedOutStatus != InforCheckedOutStatus.CheckedOutSelf) {
                                    <div class="tile-small">
                                        <div class="tile-content iconic bg-blue fg-yellow">
                                            <span class="icon mif-search" OnClick="ViewClick(event, @res.Uri, false)"></span>
                                        </div>
                                    </div>
                                }
                                @if (res.CanEdit) {
                                    <div class="tile-small">
                                        <div class="tile-content iconic bg-emerald fg-orange">
                                            <span class="icon mif-pencil" OnClick="EditClick(event, @res.Uri, false)"></span>
                                        </div>
                                    </div>
                                }
                                @if (res.CheckedOutStatus == InforCheckedOutStatus.CheckedOutSelf) {
                                    <div class="tile-small">
                                        <div class="tile-content iconic bg-cobalt fg-lightGreen">
                                            <span class="icon mif-upload" OnClick="CheckinClick(@res.Uri, false)"></span>
                                        </div>
                                    </div>
                                    <div class="tile-small">
                                        <div class="tile-content iconic bg-emerald fg-orange">
                                            <span class="icon mif-pencil" OnClick="EditClick(event, @res.Uri, false)"></span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }*@

                </div>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(".carousel").kendoTouch({
        filter: ".tileswipe",
        enableSwipe: true,
        swipe: function(e) {
            console.log();
            if (e.direction === 'right') {
                $(e.sender.element["0"]).data('carousel').priorSlide();
                e.stopPropagation();
                e.preventDefault();
            }
            if (e.direction === 'left') {
                $(e.sender.element["0"]).data('carousel').nextSlide();
                e.stopPropagation();
                e.preventDefault();
            }
        }
    });
</script>